<?php

/**
 * This class is an abstraction of a note
 * @author Cassiano Vellames <c.vellames@outlook.com>
 * @since 1.0.0
 */
final class NoteBean implements IBean, JsonSerializable {

    /**
     * @var int Id of the note. This is the primary key of table. The value is generated by the database
     */
    private $id;

    /**
     * @var UserBean User to which belongs it note
     */
    private $user;

    /**
     * @var string Title of note
     */
    private $title;

    /**
     * @var string Content of note
     */
    private $description;

    /**
     * @var DateTime Date and time that the note are created
     */
    private $created;

    /**
     * @var DateTime Date and time that the note are modified
     */
    private $modified;

    /**
     * All parameters are optional, so the object can be constructed in several ways
     * @param int|null $id
     * @param UserBean|null $user
     * @param string|null $title
     * @param string|null $description
     * @param DateTime|null $created
     * @param DateTime|null $modified
     */
    public function __construct(int $id = null, UserBean $user = null, string $title = null, string $description = null, DateTime $created = null, DateTime $modified = null){
        $this->id = $id;
        $this->user = $user;
        $this->title = $title;
        $this->description = $description;
        $this->created = $created;
        $this->modified = $modified;
    }

    public function getId() : int {
        return $this->id;
    }

    public function setId(int $id) {
        $this->id = $id;
    }

    public function getUser() : UserBean {
        return $this->user;
    }

    public function setUser(UserBean $user) {
        $this->user = $user;
    }

    public function getTitle() : string {
        return $this->title;
    }

    public function setTitle(string $title){
        $this->title = $title;
    }

    public function getDescription() : string {
        return $this->description;
    }

    public function setDescription(string $description){
        $this->description = $description;
    }

    public function getCreated() : DateTime{
        return $this->created;
    }

    public function setCreated(DateTime $created){
        $this->created = $created;
    }

    public function getModified() : DateTime{
        return $this->modified;
    }

    public function setModified(DateTime $modified){
        $this->modified = $modified;
    }

    /**
     * Specify data which should be serialized to JSON
     * @link http://php.net/manual/en/jsonserializable.jsonserialize.php
     * @return mixed data which can be serialized by <b>json_encode</b>,
     * which is a value of any type other than a resource.
     * @since 5.4.0
     */
    function jsonSerialize(){
        return [
            "id" => $this->id,
            "user_id" => $this->user->getId(),
            "title" => $this->title,
            "description" => $this->description,
            "created" => isset($this->created) ? $this->created->format("Y-m-d H:i:s") : null,
            "modified" => isset($this->modified) ? $this->modified->format("Y-m-d H:i:s") : null
        ];
    }
}
